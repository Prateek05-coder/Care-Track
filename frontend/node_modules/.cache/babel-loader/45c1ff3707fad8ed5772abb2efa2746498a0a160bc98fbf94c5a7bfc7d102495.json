{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meher\\\\OneDrive\\\\Desktop\\\\CareTrack\\\\frontend\\\\src\\\\views\\\\Patients.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PatientList from '../components/PatientList';\nimport PatientModal from '../components/PatientModal';\nimport PatientDetails from './PatientDetails';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 10;\nconst Patients = () => {\n  _s();\n  const [allPatients, setAllPatients] = useState([]); // All patients from backend\n  const [patients, setPatients] = useState([]); // Patients to display (filtered)\n  const [loading, setLoading] = useState(true);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n\n  // Search and filter states\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showFilters, setShowFilters] = useState(false);\n  const [searchCondition, setSearchCondition] = useState('');\n  const [searchVisitDate, setSearchVisitDate] = useState('');\n  const [sortField, setSortField] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [page, setPage] = useState(1);\n\n  // Fetch all patients from backend\n  const fetchAllPatients = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:5000/api/patients');\n      setAllPatients(res.data);\n      setLoading(false);\n    } catch (err) {\n      alert('Error fetching patients.');\n      setAllPatients([]);\n      setLoading(false);\n    }\n  };\n\n  // Apply client-side search and backend-like filters\n  useEffect(() => {\n    let filtered = [...allPatients];\n\n    // Client-side search bar (name, phone, id)\n    if (searchTerm.trim()) {\n      const term = searchTerm.trim().toLowerCase();\n      filtered = filtered.filter(p => p.firstName && p.firstName.toLowerCase().includes(term) || p.lastName && p.lastName.toLowerCase().includes(term) || p.phone && p.phone.includes(term) || p._id && p._id.toLowerCase().includes(term));\n    }\n\n    // Filter by condition (if any)\n    if (searchCondition.trim()) {\n      filtered = filtered.filter(p => p.medicalHistory && p.medicalHistory.condition && p.medicalHistory.condition.toLowerCase().includes(searchCondition.trim().toLowerCase()));\n    }\n\n    // Filter by visit date (if any)\n    if (searchVisitDate) {\n      filtered = filtered.filter(p => p.lastVisit && p.lastVisit.slice(0, 10) === searchVisitDate || Array.isArray(p.visits) && p.visits.some(v => v.date && v.date.slice(0, 10) === searchVisitDate));\n    }\n\n    // Sorting\n    filtered.sort((a, b) => {\n      let aValue = a[sortField];\n      let bValue = b[sortField];\n      if (sortField === 'firstName' || sortField === 'lastName') {\n        aValue = (aValue || '').toLowerCase();\n        bValue = (bValue || '').toLowerCase();\n      }\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\n      return 0;\n    });\n    setPatients(filtered);\n    setPage(1); // Reset to first page on filter/search change\n  }, [allPatients, searchTerm, searchCondition, searchVisitDate, sortField, sortOrder]);\n  useEffect(() => {\n    fetchAllPatients();\n  }, []);\n\n  // Pagination\n  const totalPages = Math.max(1, Math.ceil(patients.length / PAGE_SIZE));\n  const paginatedPatients = patients.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE);\n  const handleDeletePatient = async id => {\n    if (!window.confirm('Are you sure?')) return;\n    try {\n      await axios.delete(`http://localhost:5000/api/patients/${id}`);\n      fetchAllPatients();\n      if (selectedPatient && selectedPatient._id === id) setSelectedPatient(null);\n    } catch (err) {\n      alert('Error deleting patient');\n    }\n  };\n  const handleSavePatient = async patientData => {\n    const dataToSend = {\n      ...patientData,\n      lastVisit: patientData.lastVisit ? new Date(patientData.lastVisit) : undefined\n    };\n    try {\n      if (editingPatient) {\n        await axios.put(`http://localhost:5000/api/patients/${editingPatient._id}`, dataToSend);\n      } else {\n        await axios.post('http://localhost:5000/api/patients', dataToSend);\n      }\n      fetchAllPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n    } catch (err) {\n      alert('Error saving patient. Please check all required fields.');\n    }\n  };\n  const updatePatientData = updatedData => {\n    fetchAllPatients();\n    if (selectedPatient && selectedPatient._id === updatedData._id) setSelectedPatient(updatedData);\n  };\n\n  // Pagination controls\n  const handlePrevPage = () => setPage(page > 1 ? page - 1 : 1);\n  const handleNextPage = () => setPage(page < totalPages ? page + 1 : totalPages);\n  if (selectedPatient) {\n    return /*#__PURE__*/_jsxDEV(PatientDetails, {\n      patient: selectedPatient,\n      onBack: () => setSelectedPatient(null),\n      onUpdatePatient: updatePatientData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '1.5rem'\n      },\n      children: \"All Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap align-items-center mb-3\",\n      style: {\n        gap: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by ID, Name...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"form-control\",\n        style: {\n          width: 200\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-secondary\",\n        style: {\n          marginLeft: 10\n        },\n        onClick: () => setShowFilters(f => !f),\n        children: showFilters ? \"Hide Filters\" : \"Show Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        style: {\n          marginLeft: 'auto'\n        },\n        onClick: () => {\n          setEditingPatient(null);\n          setShowPatientModal(true);\n        },\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 d-flex flex-wrap align-items-center\",\n      style: {\n        gap: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Condition\",\n        value: searchCondition,\n        onChange: e => setSearchCondition(e.target.value),\n        className: \"form-control\",\n        style: {\n          width: 140\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Visit Date\",\n        value: searchVisitDate,\n        onChange: e => setSearchVisitDate(e.target.value),\n        className: \"form-control\",\n        style: {\n          width: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: sortField,\n        onChange: e => setSortField(e.target.value),\n        style: {\n          width: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"createdAt\",\n          children: \"Sort: Newest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"firstName\",\n          children: \"Sort: Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dob\",\n          children: \"Sort: DOB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: sortOrder,\n        onChange: e => setSortOrder(e.target.value),\n        style: {\n          width: 110\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \"Desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"Asc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PatientList, {\n        patients: paginatedPatients,\n        onView: setSelectedPatient,\n        onEdit: patient => {\n          setEditingPatient(patient);\n          setShowPatientModal(true);\n        },\n        onDelete: handleDeletePatient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handlePrevPage,\n          disabled: page === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", page, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleNextPage,\n          disabled: page === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(PatientModal, {\n      show: showPatientModal,\n      onClose: () => setShowPatientModal(false),\n      onSave: handleSavePatient,\n      patient: editingPatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Patients, \"Cf6Ss3+QRwEp698gLr61G4esQ7E=\");\n_c = Patients;\nexport default Patients;\nvar _c;\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"names":["React","useEffect","useState","axios","PatientList","PatientModal","PatientDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","PAGE_SIZE","Patients","_s","allPatients","setAllPatients","patients","setPatients","loading","setLoading","selectedPatient","setSelectedPatient","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","searchTerm","setSearchTerm","showFilters","setShowFilters","searchCondition","setSearchCondition","searchVisitDate","setSearchVisitDate","sortField","setSortField","sortOrder","setSortOrder","page","setPage","fetchAllPatients","res","get","data","err","alert","filtered","trim","term","toLowerCase","filter","p","firstName","includes","lastName","phone","_id","medicalHistory","condition","lastVisit","slice","Array","isArray","visits","some","v","date","sort","a","b","aValue","bValue","totalPages","Math","max","ceil","length","paginatedPatients","handleDeletePatient","id","window","confirm","delete","handleSavePatient","patientData","dataToSend","Date","undefined","put","post","updatePatientData","updatedData","handlePrevPage","handleNextPage","patient","onBack","onUpdatePatient","fileName","_jsxFileName","lineNumber","columnNumber","children","style","fontSize","className","gap","type","placeholder","value","onChange","e","target","width","marginLeft","onClick","f","flex","onView","onEdit","onDelete","disabled","show","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/Users/Meher/OneDrive/Desktop/CareTrack/frontend/src/views/Patients.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport PatientList from '../components/PatientList';\r\nimport PatientModal from '../components/PatientModal';\r\nimport PatientDetails from './PatientDetails';\r\n\r\nconst PAGE_SIZE = 10;\r\n\r\nconst Patients = () => {\r\n  const [allPatients, setAllPatients] = useState([]); // All patients from backend\r\n  const [patients, setPatients] = useState([]);       // Patients to display (filtered)\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n\r\n  // Search and filter states\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [searchCondition, setSearchCondition] = useState('');\r\n  const [searchVisitDate, setSearchVisitDate] = useState('');\r\n  const [sortField, setSortField] = useState('createdAt');\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n  const [page, setPage] = useState(1);\r\n\r\n  // Fetch all patients from backend\r\n  const fetchAllPatients = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/patients');\r\n      setAllPatients(res.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      alert('Error fetching patients.');\r\n      setAllPatients([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Apply client-side search and backend-like filters\r\n  useEffect(() => {\r\n    let filtered = [...allPatients];\r\n\r\n    // Client-side search bar (name, phone, id)\r\n    if (searchTerm.trim()) {\r\n      const term = searchTerm.trim().toLowerCase();\r\n      filtered = filtered.filter(p =>\r\n        (p.firstName && p.firstName.toLowerCase().includes(term)) ||\r\n        (p.lastName && p.lastName.toLowerCase().includes(term)) ||\r\n        (p.phone && p.phone.includes(term)) ||\r\n        (p._id && p._id.toLowerCase().includes(term))\r\n      );\r\n    }\r\n\r\n    // Filter by condition (if any)\r\n    if (searchCondition.trim()) {\r\n      filtered = filtered.filter(p =>\r\n        p.medicalHistory &&\r\n        p.medicalHistory.condition &&\r\n        p.medicalHistory.condition.toLowerCase().includes(searchCondition.trim().toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Filter by visit date (if any)\r\n    if (searchVisitDate) {\r\n      filtered = filtered.filter(p =>\r\n        (p.lastVisit && p.lastVisit.slice(0, 10) === searchVisitDate) ||\r\n        (Array.isArray(p.visits) && p.visits.some(v => v.date && v.date.slice(0, 10) === searchVisitDate))\r\n      );\r\n    }\r\n\r\n    // Sorting\r\n    filtered.sort((a, b) => {\r\n      let aValue = a[sortField];\r\n      let bValue = b[sortField];\r\n      if (sortField === 'firstName' || sortField === 'lastName') {\r\n        aValue = (aValue || '').toLowerCase();\r\n        bValue = (bValue || '').toLowerCase();\r\n      }\r\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    setPatients(filtered);\r\n    setPage(1); // Reset to first page on filter/search change\r\n  }, [allPatients, searchTerm, searchCondition, searchVisitDate, sortField, sortOrder]);\r\n\r\n  useEffect(() => {\r\n    fetchAllPatients();\r\n  }, []);\r\n\r\n  // Pagination\r\n  const totalPages = Math.max(1, Math.ceil(patients.length / PAGE_SIZE));\r\n  const paginatedPatients = patients.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE);\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    if (!window.confirm('Are you sure?')) return;\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/patients/${id}`);\r\n      fetchAllPatients();\r\n      if (selectedPatient && selectedPatient._id === id) setSelectedPatient(null);\r\n    } catch (err) {\r\n      alert('Error deleting patient');\r\n    }\r\n  };\r\n\r\n  const handleSavePatient = async (patientData) => {\r\n    const dataToSend = {\r\n      ...patientData,\r\n      lastVisit: patientData.lastVisit ? new Date(patientData.lastVisit) : undefined\r\n    };\r\n    try {\r\n      if (editingPatient) {\r\n        await axios.put(`http://localhost:5000/api/patients/${editingPatient._id}`, dataToSend);\r\n      } else {\r\n        await axios.post('http://localhost:5000/api/patients', dataToSend);\r\n      }\r\n      fetchAllPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n    } catch (err) {\r\n      alert('Error saving patient. Please check all required fields.');\r\n    }\r\n  };\r\n\r\n  const updatePatientData = (updatedData) => {\r\n    fetchAllPatients();\r\n    if (selectedPatient && selectedPatient._id === updatedData._id) setSelectedPatient(updatedData);\r\n  };\r\n\r\n  // Pagination controls\r\n  const handlePrevPage = () => setPage(page > 1 ? page - 1 : 1);\r\n  const handleNextPage = () => setPage(page < totalPages ? page + 1 : totalPages);\r\n\r\n  if (selectedPatient) {\r\n    return (\r\n      <PatientDetails\r\n        patient={selectedPatient}\r\n        onBack={() => setSelectedPatient(null)}\r\n        onUpdatePatient={updatePatientData}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Patient Records</h1>\r\n      <h2 style={{ fontSize: '1.5rem' }}>All Patients</h2>\r\n      <div className=\"d-flex flex-wrap align-items-center mb-3\" style={{ gap: 10 }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by ID, Name...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"form-control\"\r\n          style={{ width: 200 }}\r\n        />\r\n        <button\r\n          className=\"btn btn-outline-secondary\"\r\n          style={{ marginLeft: 10 }}\r\n          onClick={() => setShowFilters(f => !f)}\r\n        >\r\n          {showFilters ? \"Hide Filters\" : \"Show Filters\"}\r\n        </button>\r\n        <div style={{ flex: 1 }} />\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          style={{ marginLeft: 'auto' }}\r\n          onClick={() => { setEditingPatient(null); setShowPatientModal(true); }}\r\n        >\r\n          Add Patient\r\n        </button>\r\n      </div>\r\n      {showFilters && (\r\n        <div className=\"mb-3 d-flex flex-wrap align-items-center\" style={{ gap: 10 }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Condition\"\r\n            value={searchCondition}\r\n            onChange={(e) => setSearchCondition(e.target.value)}\r\n            className=\"form-control\"\r\n            style={{ width: 140 }}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Visit Date\"\r\n            value={searchVisitDate}\r\n            onChange={(e) => setSearchVisitDate(e.target.value)}\r\n            className=\"form-control\"\r\n            style={{ width: 150 }}\r\n          />\r\n          <select\r\n            className=\"form-select\"\r\n            value={sortField}\r\n            onChange={e => setSortField(e.target.value)}\r\n            style={{ width: 120 }}\r\n          >\r\n            <option value=\"createdAt\">Sort: Newest</option>\r\n            <option value=\"firstName\">Sort: Name</option>\r\n            <option value=\"dob\">Sort: DOB</option>\r\n          </select>\r\n          <select\r\n            className=\"form-select\"\r\n            value={sortOrder}\r\n            onChange={e => setSortOrder(e.target.value)}\r\n            style={{ width: 110 }}\r\n          >\r\n            <option value=\"desc\">Desc</option>\r\n            <option value=\"asc\">Asc</option>\r\n          </select>\r\n        </div>\r\n      )}\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          <PatientList\r\n            patients={paginatedPatients}\r\n            onView={setSelectedPatient}\r\n            onEdit={(patient) => { setEditingPatient(patient); setShowPatientModal(true); }}\r\n            onDelete={handleDeletePatient}\r\n          />\r\n          <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n            <button className=\"btn btn-secondary\" onClick={handlePrevPage} disabled={page === 1}>Previous</button>\r\n            <span>Page {page} of {totalPages}</span>\r\n            <button className=\"btn btn-secondary\" onClick={handleNextPage} disabled={page === totalPages}>Next</button>\r\n          </div>\r\n        </>\r\n      )}\r\n      <PatientModal\r\n        show={showPatientModal}\r\n        onClose={() => setShowPatientModal(false)}\r\n        onSave={handleSavePatient}\r\n        patient={editingPatient}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}