{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meher\\\\OneDrive\\\\Desktop\\\\CareTrack\\\\frontend\\\\src\\\\components\\\\PatientList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateStr => {\n  if (!dateStr) return 'N/A';\n  const d = new Date(dateStr);\n  if (isNaN(d.getTime())) return 'N/A'; // Proper check for invalid date\n  return `${String(d.getDate()).padStart(2, '0')}-${String(d.getMonth() + 1).padStart(2, '0')}-${d.getFullYear()}`;\n};\nconst PatientList = ({\n  patients,\n  onEdit,\n  onDelete,\n  onView\n}) => {\n  _s();\n  const [updatedPatients, setUpdatedPatients] = useState([]);\n  useEffect(() => {\n    console.log(\"Patients List Updated:\", patients); // Debugging Output\n    setUpdatedPatients(patients); // Ensure re-render when patients change\n  }, [patients]);\n  const getLastVisit = patient => {\n    if (patient.lastVisit) return formatDate(patient.lastVisit); // Ensure single field works first\n    if (!Array.isArray(patient.visits) || patient.visits.length === 0) return 'N/A';\n    const sortedVisits = patient.visits.map(v => new Date(v.date)).filter(d => !isNaN(d.getTime())) // Filter valid dates\n    .sort((a, b) => b - a);\n    return sortedVisits.length > 0 ? formatDate(sortedVisits[0]) : 'N/A';\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-hover\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Patient ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"DOB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Visit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: updatedPatients.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"7\",\n          children: \"No patients found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : updatedPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.patientId || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [patient.firstName, \" \", patient.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.gender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatDate(patient.dob)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getLastVisit(patient)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-info me-2\",\n            onClick: () => onView(patient),\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-secondary me-2\",\n            onClick: () => onEdit(patient),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-danger\",\n            onClick: () => onDelete(patient._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, patient._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientList, \"R8SCsQ1hvsaY580lSPZ0MXBeJmM=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","formatDate","dateStr","d","Date","isNaN","getTime","String","getDate","padStart","getMonth","getFullYear","PatientList","patients","onEdit","onDelete","onView","_s","updatedPatients","setUpdatedPatients","console","log","getLastVisit","patient","lastVisit","Array","isArray","visits","length","sortedVisits","map","v","date","filter","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","patientId","firstName","lastName","gender","dob","phone","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/Meher/OneDrive/Desktop/CareTrack/frontend/src/components/PatientList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst formatDate = (dateStr) => {\r\n  if (!dateStr) return 'N/A';\r\n  const d = new Date(dateStr);\r\n  if (isNaN(d.getTime())) return 'N/A'; // Proper check for invalid date\r\n  return `${String(d.getDate()).padStart(2, '0')}-${String(d.getMonth() + 1).padStart(2, '0')}-${d.getFullYear()}`;\r\n};\r\n\r\nconst PatientList = ({ patients, onEdit, onDelete, onView }) => {\r\n  const [updatedPatients, setUpdatedPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Patients List Updated:\", patients); // Debugging Output\r\n    setUpdatedPatients(patients); // Ensure re-render when patients change\r\n  }, [patients]);\r\n\r\n  const getLastVisit = (patient) => {\r\n    if (patient.lastVisit) return formatDate(patient.lastVisit); // Ensure single field works first\r\n    if (!Array.isArray(patient.visits) || patient.visits.length === 0) return 'N/A';\r\n\r\n    const sortedVisits = patient.visits\r\n      .map(v => new Date(v.date))\r\n      .filter(d => !isNaN(d.getTime())) // Filter valid dates\r\n      .sort((a, b) => b - a);\r\n\r\n    return sortedVisits.length > 0 ? formatDate(sortedVisits[0]) : 'N/A';\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th>Patient ID</th>\r\n          <th>Name</th>\r\n          <th>Gender</th>\r\n          <th>DOB</th>\r\n          <th>Phone</th>\r\n          <th>Last Visit</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {updatedPatients.length === 0 ? (\r\n          <tr><td colSpan=\"7\">No patients found.</td></tr>\r\n        ) : (\r\n          updatedPatients.map((patient) => (\r\n            <tr key={patient._id}>\r\n              <td>{patient.patientId || 'N/A'}</td>\r\n              <td>{patient.firstName} {patient.lastName}</td>\r\n              <td>{patient.gender}</td>\r\n              <td>{formatDate(patient.dob)}</td>\r\n              <td>{patient.phone}</td>\r\n              <td>{getLastVisit(patient)}</td> {/* Fixed retrieval */}\r\n              <td>\r\n                <button className=\"btn btn-sm btn-info me-2\" onClick={() => onView(patient)}>View</button>\r\n                <button className=\"btn btn-sm btn-secondary me-2\" onClick={() => onEdit(patient)}>Edit</button>\r\n                <button className=\"btn btn-sm btn-danger\" onClick={() => onDelete(patient._id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default PatientList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}