{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meher\\\\OneDrive\\\\Desktop\\\\CareTrack\\\\frontend\\\\src\\\\views\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  patients,\n  fetchPatients\n}) => {\n  _s();\n  // Calculate total patients\n  const totalPatients = patients.length;\n\n  // Calculate new patients this month\n  const newPatientsThisMonth = useMemo(() => {\n    const now = new Date();\n    return patients.filter(p => {\n      if (!p.createdAt) return false;\n      const created = new Date(p.createdAt);\n      return created.getMonth() === now.getMonth() && created.getFullYear() === now.getFullYear();\n    }).length;\n  }, [patients]);\n\n  // Calculate upcoming appointments\n  const upcomingAppointments = useMemo(() => {\n    const now = new Date();\n    return patients.reduce((count, p) => {\n      if (Array.isArray(p.visits)) {\n        return count + p.visits.filter(v => new Date(v.date) > now).length;\n      }\n      return count;\n    }, 0);\n  }, [patients]);\n\n  // Calculate patients with prescriptions\n  const patientsWithPrescriptions = useMemo(() => {\n    return patients.filter(p => Array.isArray(p.prescriptions) && p.prescriptions.length > 0).length;\n  }, [patients]);\n\n  // Recent Activity: Show the 5 most recent patient additions or edits\n  const recentActivity = useMemo(() => {\n    // Combine createdAt and updatedAt, sort by most recent, and show top 5\n    const activityList = patients.map(p => {\n      const created = p.createdAt ? new Date(p.createdAt) : null;\n      const updated = p.updatedAt ? new Date(p.updatedAt) : null;\n      let activityDate = created;\n      let activityType = 'Added';\n      if (updated && created && updated > created) {\n        activityDate = updated;\n        activityType = 'Edited';\n      }\n      return {\n        name: `${p.firstName || ''} ${p.lastName || ''}`.trim() || p.name || 'Unnamed Patient',\n        activityDate,\n        activityType\n      };\n    }).filter(a => a.activityDate).sort((a, b) => b.activityDate - a.activityDate).slice(0, 5);\n    return activityList;\n  }, [patients]);\n\n  // Refresh handler\n  const [refreshing, setRefreshing] = useState(false);\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    if (typeof fetchPatients === 'function') {\n      await fetchPatients();\n    }\n    setRefreshing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the CareTrack Patient Management System!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here you can manage your patients, view analytics, and adjust settings.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dashboardView\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Patient Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Patients: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"totalPatients\",\n              children: totalPatients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"New Patients This Month: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"newPatients\",\n              children: newPatientsThisMonth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Upcoming Appointments: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"upcomingAppointments\",\n              children: upcomingAppointments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Patients with Prescriptions: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"patientsWithPrescriptions\",\n              children: patientsWithPrescriptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleRefresh,\n            disabled: refreshing,\n            style: {\n              marginTop: 16\n            },\n            children: refreshing ? \"Refreshing...\" : \"Refresh Patient Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recent Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"recentActivity\",\n            children: recentActivity.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No recent activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                paddingLeft: 18\n              },\n              children: recentActivity.map((a, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: a.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this), \" \", a.activityType, \" on\", \" \", a.activityDate.toLocaleDateString(), \" at \", a.activityDate.toLocaleTimeString()]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Noz6HegGj0Ula3nWeKMQ9HT0Ymo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useMemo","useState","jsxDEV","_jsxDEV","Dashboard","patients","fetchPatients","_s","totalPatients","length","newPatientsThisMonth","now","Date","filter","p","createdAt","created","getMonth","getFullYear","upcomingAppointments","reduce","count","Array","isArray","visits","v","date","patientsWithPrescriptions","prescriptions","recentActivity","activityList","map","updated","updatedAt","activityDate","activityType","name","firstName","lastName","trim","a","sort","b","slice","refreshing","setRefreshing","handleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","onClick","disabled","style","marginTop","paddingLeft","idx","toLocaleDateString","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Meher/OneDrive/Desktop/CareTrack/frontend/src/views/dashboard.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\r\n\r\nconst Dashboard = ({ patients, fetchPatients }) => {\r\n  // Calculate total patients\r\n  const totalPatients = patients.length;\r\n\r\n  // Calculate new patients this month\r\n  const newPatientsThisMonth = useMemo(() => {\r\n    const now = new Date();\r\n    return patients.filter(p => {\r\n      if (!p.createdAt) return false;\r\n      const created = new Date(p.createdAt);\r\n      return created.getMonth() === now.getMonth() && created.getFullYear() === now.getFullYear();\r\n    }).length;\r\n  }, [patients]);\r\n\r\n  // Calculate upcoming appointments\r\n  const upcomingAppointments = useMemo(() => {\r\n    const now = new Date();\r\n    return patients.reduce((count, p) => {\r\n      if (Array.isArray(p.visits)) {\r\n        return count + p.visits.filter(v => new Date(v.date) > now).length;\r\n      }\r\n      return count;\r\n    }, 0);\r\n  }, [patients]);\r\n\r\n  // Calculate patients with prescriptions\r\n  const patientsWithPrescriptions = useMemo(() => {\r\n    return patients.filter(p => Array.isArray(p.prescriptions) && p.prescriptions.length > 0).length;\r\n  }, [patients]);\r\n\r\n  // Recent Activity: Show the 5 most recent patient additions or edits\r\n  const recentActivity = useMemo(() => {\r\n    // Combine createdAt and updatedAt, sort by most recent, and show top 5\r\n    const activityList = patients\r\n      .map(p => {\r\n        const created = p.createdAt ? new Date(p.createdAt) : null;\r\n        const updated = p.updatedAt ? new Date(p.updatedAt) : null;\r\n        let activityDate = created;\r\n        let activityType = 'Added';\r\n        if (updated && created && updated > created) {\r\n          activityDate = updated;\r\n          activityType = 'Edited';\r\n        }\r\n        return {\r\n          name: `${p.firstName || ''} ${p.lastName || ''}`.trim() || p.name || 'Unnamed Patient',\r\n          activityDate,\r\n          activityType,\r\n        };\r\n      })\r\n      .filter(a => a.activityDate)\r\n      .sort((a, b) => b.activityDate - a.activityDate)\r\n      .slice(0, 5);\r\n    return activityList;\r\n  }, [patients]);\r\n\r\n  // Refresh handler\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    if (typeof fetchPatients === 'function') {\r\n      await fetchPatients();\r\n    }\r\n    setRefreshing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <p>Welcome to the CareTrack Patient Management System!</p>\r\n      <p>Here you can manage your patients, view analytics, and adjust settings.</p>\r\n      <div id=\"dashboardView\">\r\n        <div className=\"analytics-container\">\r\n          <div className=\"analytics-card\">\r\n            <h2>Patient Statistics</h2>\r\n            <p>Total Patients: <span id=\"totalPatients\">{totalPatients}</span></p>\r\n            <p>New Patients This Month: <span id=\"newPatients\">{newPatientsThisMonth}</span></p>\r\n            <p>Upcoming Appointments: <span id=\"upcomingAppointments\">{upcomingAppointments}</span></p>\r\n            <p>Patients with Prescriptions: <span id=\"patientsWithPrescriptions\">{patientsWithPrescriptions}</span></p>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={handleRefresh}\r\n              disabled={refreshing}\r\n              style={{ marginTop: 16 }}\r\n            >\r\n              {refreshing ? \"Refreshing...\" : \"Refresh Patient Data\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"analytics-card\">\r\n            <h2>Recent Activity</h2>\r\n            <div id=\"recentActivity\">\r\n              {recentActivity.length === 0 ? (\r\n                <p>No recent activity</p>\r\n              ) : (\r\n                <ul style={{ paddingLeft: 18 }}>\r\n                  {recentActivity.map((a, idx) => (\r\n                    <li key={idx}>\r\n                      <strong>{a.name}</strong> {a.activityType} on{\" \"}\r\n                      {a.activityDate.toLocaleDateString()} at {a.activityDate.toLocaleTimeString()}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}