{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meher\\\\OneDrive\\\\Desktop\\\\CareTrack\\\\frontend\\\\src\\\\views\\\\Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend);\nconst Analytics = ({\n  refreshKey,\n  patients = []\n}) => {\n  _s();\n  // State for backend analytics\n  const [patientsPerCondition, setPatientsPerCondition] = useState([]);\n  const [mostPrescribedMedications, setMostPrescribedMedications] = useState([]);\n  const [averageAgePerDepartment, setAverageAgePerDepartment] = useState([]);\n  const [visitsPerMonth, setVisitsPerMonth] = useState([]);\n\n  // Existing frontend analytics\n  const allergyCounts = {};\n  const prescriptionCounts = {};\n  const conditionCounts = {};\n  patients.forEach(patient => {\n    if (patient.allergies) {\n      const allergies = patient.allergies.split(',').map(a => a.trim());\n      allergies.forEach(allergy => {\n        allergyCounts[allergy] = (allergyCounts[allergy] || 0) + 1;\n      });\n    }\n    if (patient.prescriptions) {\n      patient.prescriptions.forEach(prescription => {\n        prescriptionCounts[prescription.medication] = (prescriptionCounts[prescription.medication] || 0) + 1;\n      });\n    }\n    if (patient.medicalHistory) {\n      patient.medicalHistory.forEach(history => {\n        conditionCounts[history.condition] = (conditionCounts[history.condition] || 0) + 1;\n      });\n    }\n  });\n\n  // Fetch backend analytics using MongoDB aggregation\n  useEffect(() => {\n    axios.get(\"/api/patients/analytics/patients-per-condition\").then(res => setPatientsPerCondition(res.data)).catch(() => setPatientsPerCondition([]));\n    axios.get(\"/api/patients/analytics/most-prescribed-medications\").then(res => setMostPrescribedMedications(res.data)).catch(() => setMostPrescribedMedications([]));\n    axios.get(\"/api/patients/analytics/average-age-per-department\").then(res => setAverageAgePerDepartment(res.data)).catch(() => setAverageAgePerDepartment([]));\n    axios.get(\"/api/patients/analytics/visits-per-month\").then(res => setVisitsPerMonth(res.data)).catch(() => setVisitsPerMonth([]));\n  }, [refreshKey]);\n\n  // Chart.js data\n  const conditionBarData = {\n    labels: patientsPerCondition.map(item => item._id),\n    datasets: [{\n      label: \"Patients per Condition\",\n      data: patientsPerCondition.map(item => item.count),\n      backgroundColor: \"#1976d2\"\n    }]\n  };\n  const medicationPieData = {\n    labels: mostPrescribedMedications.map(item => item._id),\n    datasets: [{\n      label: \"Most Prescribed Medications\",\n      data: mostPrescribedMedications.map(item => item.count),\n      backgroundColor: [\"#1976d2\", \"#388e3c\", \"#fbc02d\", \"#d32f2f\", \"#7b1fa2\", \"#0288d1\", \"#c2185b\"]\n    }]\n  };\n  const avgAgeBarData = {\n    labels: averageAgePerDepartment.map(item => item._id),\n    datasets: [{\n      label: \"Average Age\",\n      data: averageAgePerDepartment.map(item => item.avgAge && item.avgAge.toFixed ? Number(item.avgAge.toFixed(1)) : item.avgAge),\n      backgroundColor: \"#388e3c\"\n    }]\n  };\n  const visitsBarData = {\n    labels: visitsPerMonth.map(item => item._id),\n    datasets: [{\n      label: \"Visits per Month\",\n      data: visitsPerMonth.map(item => item.count),\n      backgroundColor: \"#fbc02d\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"analyticsView\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"View patient demographics, age distribution, common conditions, prescription trends, and allergy statistics.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Patients: \", patients.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Patient Demographics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Male Patients: \", patients.filter(p => p.gender === 'Male').length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Female Patients: \", patients.filter(p => p.gender === 'Female').length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Other Genders: \", patients.filter(p => p.gender !== 'Male' && p.gender !== 'Female').length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Age Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Under 18: \", patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() < 18).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"18-35: \", patients.filter(p => {\n            const age = new Date().getFullYear() - new Date(p.dob).getFullYear();\n            return age >= 18 && age <= 35;\n          }).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"36-55: \", patients.filter(p => {\n            const age = new Date().getFullYear() - new Date(p.dob).getFullYear();\n            return age >= 36 && age <= 55;\n          }).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Over 55: \", patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() > 55).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Common Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), Object.entries(conditionCounts).map(([condition, count]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition '\", condition, \"' - \", count]\n        }, condition, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prescription Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), Object.entries(prescriptionCounts).map(([medication, count]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Prescribed '\", medication, \"' - \", count]\n        }, medication, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Allergy Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), Object.entries(allergyCounts).map(([allergy, count]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Patients with '\", allergy, \"' Allergy - \", count]\n        }, allergy, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Patients per Condition \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), patientsPerCondition.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n          data: conditionBarData,\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Most Prescribed Medications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), mostPrescribedMedications.length > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n          data: medicationPieData,\n          options: {\n            responsive: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Frequency of Visits per Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), visitsPerMonth.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n          data: visitsBarData,\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                display: false\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"fS+WIPIe4ti5x96T0TZbnGWgUXQ=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Pie","Chart","CategoryScale","LinearScale","BarElement","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","Analytics","refreshKey","patients","_s","patientsPerCondition","setPatientsPerCondition","mostPrescribedMedications","setMostPrescribedMedications","averageAgePerDepartment","setAverageAgePerDepartment","visitsPerMonth","setVisitsPerMonth","allergyCounts","prescriptionCounts","conditionCounts","forEach","patient","allergies","split","map","a","trim","allergy","prescriptions","prescription","medication","medicalHistory","history","condition","get","then","res","data","catch","conditionBarData","labels","item","_id","datasets","label","count","backgroundColor","medicationPieData","avgAgeBarData","avgAge","toFixed","Number","visitsBarData","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","filter","p","gender","Date","getFullYear","dob","age","Object","entries","options","responsive","plugins","legend","display","_c","$RefreshReg$"],"sources":["C:/Users/Meher/OneDrive/Desktop/CareTrack/frontend/src/views/Analytics.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Bar, Pie } from \"react-chartjs-2\";\r\nimport { Chart, CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChart.register(CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend);\r\n\r\nconst Analytics = ({ refreshKey, patients = [] }) => {\r\n  // State for backend analytics\r\n  const [patientsPerCondition, setPatientsPerCondition] = useState([]);\r\n  const [mostPrescribedMedications, setMostPrescribedMedications] = useState([]);\r\n  const [averageAgePerDepartment, setAverageAgePerDepartment] = useState([]);\r\n  const [visitsPerMonth, setVisitsPerMonth] = useState([]);\r\n\r\n  // Existing frontend analytics\r\n  const allergyCounts = {};\r\n  const prescriptionCounts = {};\r\n  const conditionCounts = {};\r\n\r\n  patients.forEach(patient => {\r\n    if (patient.allergies) {\r\n      const allergies = patient.allergies.split(',').map(a => a.trim());\r\n      allergies.forEach(allergy => {\r\n        allergyCounts[allergy] = (allergyCounts[allergy] || 0) + 1;\r\n      });\r\n    }\r\n    if (patient.prescriptions) {\r\n      patient.prescriptions.forEach(prescription => {\r\n        prescriptionCounts[prescription.medication] = (prescriptionCounts[prescription.medication] || 0) + 1;\r\n      });\r\n    }\r\n    if (patient.medicalHistory) {\r\n      patient.medicalHistory.forEach(history => {\r\n        conditionCounts[history.condition] = (conditionCounts[history.condition] || 0) + 1;\r\n      });\r\n    }\r\n  });\r\n\r\n  // Fetch backend analytics using MongoDB aggregation\r\n  useEffect(() => {\r\n    axios.get(\"/api/patients/analytics/patients-per-condition\")\r\n      .then(res => setPatientsPerCondition(res.data))\r\n      .catch(() => setPatientsPerCondition([]));\r\n\r\n    axios.get(\"/api/patients/analytics/most-prescribed-medications\")\r\n      .then(res => setMostPrescribedMedications(res.data))\r\n      .catch(() => setMostPrescribedMedications([]));\r\n\r\n    axios.get(\"/api/patients/analytics/average-age-per-department\")\r\n      .then(res => setAverageAgePerDepartment(res.data))\r\n      .catch(() => setAverageAgePerDepartment([]));\r\n\r\n    axios.get(\"/api/patients/analytics/visits-per-month\")\r\n      .then(res => setVisitsPerMonth(res.data))\r\n      .catch(() => setVisitsPerMonth([]));\r\n  }, [refreshKey]);\r\n\r\n  // Chart.js data\r\n  const conditionBarData = {\r\n    labels: patientsPerCondition.map(item => item._id),\r\n    datasets: [\r\n      {\r\n        label: \"Patients per Condition\",\r\n        data: patientsPerCondition.map(item => item.count),\r\n        backgroundColor: \"#1976d2\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const medicationPieData = {\r\n    labels: mostPrescribedMedications.map(item => item._id),\r\n    datasets: [\r\n      {\r\n        label: \"Most Prescribed Medications\",\r\n        data: mostPrescribedMedications.map(item => item.count),\r\n        backgroundColor: [\r\n          \"#1976d2\", \"#388e3c\", \"#fbc02d\", \"#d32f2f\", \"#7b1fa2\", \"#0288d1\", \"#c2185b\"\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const avgAgeBarData = {\r\n    labels: averageAgePerDepartment.map(item => item._id),\r\n    datasets: [\r\n      {\r\n        label: \"Average Age\",\r\n        data: averageAgePerDepartment.map(item => item.avgAge && item.avgAge.toFixed ? Number(item.avgAge.toFixed(1)) : item.avgAge),\r\n        backgroundColor: \"#388e3c\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const visitsBarData = {\r\n    labels: visitsPerMonth.map(item => item._id),\r\n    datasets: [\r\n      {\r\n        label: \"Visits per Month\",\r\n        data: visitsPerMonth.map(item => item.count),\r\n        backgroundColor: \"#fbc02d\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div id=\"analyticsView\">\r\n      <h1>Analytics</h1>\r\n      <p>View patient demographics, age distribution, common conditions, prescription trends, and allergy statistics.</p>\r\n      <p>Total Patients: {patients.length}</p>\r\n\r\n      <div className=\"analytics-container\">\r\n        {/* Patient Demographics */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Patient Demographics</h2>\r\n          <p>Male Patients: {patients.filter(p => p.gender === 'Male').length}</p>\r\n          <p>Female Patients: {patients.filter(p => p.gender === 'Female').length}</p>\r\n          <p>Other Genders: {patients.filter(p => p.gender !== 'Male' && p.gender !== 'Female').length}</p>\r\n        </div>\r\n\r\n        {/* Age Distribution */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Age Distribution</h2>\r\n          <p>Under 18: {patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() < 18).length}</p>\r\n          <p>18-35: {patients.filter(p => {\r\n            const age = new Date().getFullYear() - new Date(p.dob).getFullYear();\r\n            return age >= 18 && age <= 35;\r\n          }).length}</p>\r\n          <p>36-55: {patients.filter(p => {\r\n            const age = new Date().getFullYear() - new Date(p.dob).getFullYear();\r\n            return age >= 36 && age <= 55;\r\n          }).length}</p>\r\n          <p>Over 55: {patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() > 55).length}</p>\r\n        </div>\r\n\r\n        {/* Common Conditions (Frontend) */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Common Conditions</h2>\r\n          {Object.entries(conditionCounts).map(([condition, count]) => (\r\n            <p key={condition}>Condition '{condition}' - {count}</p>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Prescription Trends (Frontend) */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Prescription Trends</h2>\r\n          {Object.entries(prescriptionCounts).map(([medication, count]) => (\r\n            <p key={medication}>Prescribed '{medication}' - {count}</p>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Allergy Statistics (Frontend) */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Allergy Statistics</h2>\r\n          {Object.entries(allergyCounts).map(([allergy, count]) => (\r\n            <p key={allergy}>Patients with '{allergy}' Allergy - {count}</p>\r\n          ))}\r\n        </div>\r\n\r\n        {/* --- MongoDB Aggregation Analytics with Chart.js --- */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Patients per Condition </h2>\r\n          {patientsPerCondition.length > 0 ? (\r\n            <Bar data={conditionBarData} options={{ responsive: true, plugins: { legend: { display: false } } }} />\r\n          ) : <p>No data available.</p>}\r\n        </div>\r\n\r\n        <div className=\"analytics-card\">\r\n          <h2>Most Prescribed Medications</h2>\r\n          {mostPrescribedMedications.length > 0 ? (\r\n            <Pie data={medicationPieData} options={{ responsive: true }} />\r\n          ) : <p>No data available.</p>}\r\n        </div>\r\n\r\n\r\n        <div className=\"analytics-card\">\r\n          <h2>Frequency of Visits per Month</h2>\r\n          {visitsPerMonth.length > 0 ? (\r\n            <Bar data={visitsBarData} options={{ responsive: true, plugins: { legend: { display: false } } }} />\r\n          ) : <p>No data available.</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}