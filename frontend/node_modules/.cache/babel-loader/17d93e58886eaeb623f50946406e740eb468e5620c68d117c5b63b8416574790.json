{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meher\\\\OneDrive\\\\Desktop\\\\CareTrack\\\\frontend\\\\src\\\\views\\\\Analytics.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = ({\n  patients = []\n}) => {\n  const allergyCounts = {};\n  const prescriptionCounts = {};\n  const conditionCounts = {};\n  patients.forEach(patient => {\n    if (patient.allergies) {\n      const allergies = patient.allergies.split(',').map(a => a.trim());\n      allergies.forEach(allergy => {\n        allergyCounts[allergy] = (allergyCounts[allergy] || 0) + 1;\n      });\n    }\n    if (patient.prescriptions) {\n      patient.prescriptions.forEach(prescription => {\n        prescriptionCounts[prescription.medication] = (prescriptionCounts[prescription.medication] || 0) + 1;\n      });\n    }\n    if (patient.medicalHistory) {\n      patient.medicalHistory.forEach(history => {\n        conditionCounts[history.condition] = (conditionCounts[history.condition] || 0) + 1;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"analyticsView\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"View patient demographics, age distribution, common conditions, prescription trends, and allergy statistics.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Patients: \", patients.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Patient Demographics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Male Patients: \", patients.filter(p => p.gender === 'Male').length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Female Patients: \", patients.filter(p => p.gender === 'Female').length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Other Genders: \", patients.filter(p => p.gender !== 'Male' && p.gender !== 'Female').length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Age Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Under 18: \", patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() < 18).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"18-35: \", patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() >= 18 && new Date().getFullYear() - new Date(p.dob).getFullYear() <= 35).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"36-55: \", patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() >= 36 && new Date().getFullYear() - new Date(p.dob).getFullYear() <= 55).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Over 55: \", patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() > 55).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Common Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), Object.entries(conditionCounts).map(([condition, count]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition '\", condition, \"' - \", count]\n        }, condition, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prescription Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), Object.entries(prescriptionCounts).map(([medication, count]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Prescribed '\", medication, \"' - \", count]\n        }, medication, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Allergy Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), Object.entries(allergyCounts).map(([allergy, count]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Patients with '\", allergy, \"' Allergy - \", count]\n        }, allergy, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Analytics","patients","allergyCounts","prescriptionCounts","conditionCounts","forEach","patient","allergies","split","map","a","trim","allergy","prescriptions","prescription","medication","medicalHistory","history","condition","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","filter","p","gender","Date","getFullYear","dob","Object","entries","count","_c","$RefreshReg$"],"sources":["C:/Users/Meher/OneDrive/Desktop/CareTrack/frontend/src/views/Analytics.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Analytics = ({ patients = [] }) => {\r\n  const allergyCounts = {};\r\n  const prescriptionCounts = {};\r\n  const conditionCounts = {};\r\n\r\n  patients.forEach(patient => {\r\n    if (patient.allergies) {\r\n      const allergies = patient.allergies.split(',').map(a => a.trim());\r\n      allergies.forEach(allergy => {\r\n        allergyCounts[allergy] = (allergyCounts[allergy] || 0) + 1;\r\n      });\r\n    }\r\n    if (patient.prescriptions) {\r\n      patient.prescriptions.forEach(prescription => {\r\n        prescriptionCounts[prescription.medication] = (prescriptionCounts[prescription.medication] || 0) + 1;\r\n      });\r\n    }\r\n    if (patient.medicalHistory) {\r\n      patient.medicalHistory.forEach(history => {\r\n        conditionCounts[history.condition] = (conditionCounts[history.condition] || 0) + 1;\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div id=\"analyticsView\">\r\n      <h1>Analytics</h1>\r\n      <p>View patient demographics, age distribution, common conditions, prescription trends, and allergy statistics.</p>\r\n      <p>Total Patients: {patients.length}</p>\r\n\r\n      <div className=\"analytics-container\">\r\n        {/* Patient Demographics */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Patient Demographics</h2>\r\n          <p>Male Patients: {patients.filter(p => p.gender === 'Male').length}</p>\r\n          <p>Female Patients: {patients.filter(p => p.gender === 'Female').length}</p>\r\n          <p>Other Genders: {patients.filter(p => p.gender !== 'Male' && p.gender !== 'Female').length}</p>\r\n        </div>\r\n\r\n        {/* Age Distribution */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Age Distribution</h2>\r\n          <p>Under 18: {patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() < 18).length}</p>\r\n          <p>18-35: {patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() >= 18 && new Date().getFullYear() - new Date(p.dob).getFullYear() <= 35).length}</p>\r\n          <p>36-55: {patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() >= 36 && new Date().getFullYear() - new Date(p.dob).getFullYear() <= 55).length}</p>\r\n          <p>Over 55: {patients.filter(p => new Date().getFullYear() - new Date(p.dob).getFullYear() > 55).length}</p>\r\n        </div>\r\n\r\n        {/* Common Conditions */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Common Conditions</h2>\r\n          {Object.entries(conditionCounts).map(([condition, count]) => (\r\n            <p key={condition}>Condition '{condition}' - {count}</p>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Prescription Trends */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Prescription Trends</h2>\r\n          {Object.entries(prescriptionCounts).map(([medication, count]) => (\r\n            <p key={medication}>Prescribed '{medication}' - {count}</p>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Allergy Statistics */}\r\n        <div className=\"analytics-card\">\r\n          <h2>Allergy Statistics</h2>\r\n          {Object.entries(allergyCounts).map(([allergy, count]) => (\r\n            <p key={allergy}>Patients with '{allergy}' Allergy - {count}</p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}